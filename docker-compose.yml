networks:
  main-network:
    driver: bridge

volumes:
  postgres_data:
  # node_modules:

services:

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8443:443"
    depends_on:
      - server
    networks:
      - main-network
    restart: on-failure

  server:
    image: node:alpine
    container_name: server
    working_dir: /app
    volumes:
      - ./matcha:/app
      - /app/node_modules
    expose:
      - "3000"
    command: sh -c "npm install && npm run dev"
    environment:
      - NODE_ENV=development
    networks:
      - main-network

    # container_name: server
    # build:
    #   context: ./matcha
    #   dockerfile: Dockerfile
    # volumes:
    #   - ./matcha:/app
    #   - node_modules:/app/node_modules  # éviter que node_modules de l’hôte écrase ceux du conteneur
    # expose:
    #   - "3000"
    # networks:
    #   - main-network
    # depends_on:
    #   postgres:
    #     condition: service_healthy  

  postgres:
    container_name: postgres
    image: postgres:alpine
    expose:
      - "5432"
    volumes:
        - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - main-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d matcha -U alice"]
      interval: 1s
      timeout: 1s
      retries: 5
    restart: on-failure